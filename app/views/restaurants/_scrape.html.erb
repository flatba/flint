######################################################################
# yelp
######################################################################
# # image = doc.xpath('//li[@class="mainphoto-box"]/img[@class="mainphoto-image"]').attribute("src").value

# yelpのスクレイピング先のURL
# url = 'https://www.yelp.co.jp/biz/%E3%83%8B%E3%83%A5%E3%83%BC%E3%83%A8%E3%83%BC%E3%82%AF-%E3%82%B0%E3%83%AA%E3%83%AB-%E6%96%B0%E5%AE%BF%E5%8C%BA'

url = Restaurant.last.url

opt = {}
opt['User-Agent'] = 'Opera/9.80 (Windows NT 5.1; U; ja) Presto/2.7.62 Version/11.01 '

charset = nil

html = open(restaurant_url,opt) do |f|
  charset = f.charset # 文字種別を取得
  f.read # htmlを読み込んで変数htmlに渡す
end

# htmlをパース(解析)してオブジェクトを生成
doc = Nokogiri::HTML.parse(html, nil, charset)

# 店舗名
title =  doc.title
title_num =  doc.title.index("-")
title = title[0..title_num-2]
puts title

# # カテゴリー
category = doc.xpath('//span[@class="category-str-list"]/a[1]/text()').to_s
# category2 = doc.xpath('//span[@class="category-str-list"]/a[2]/text()').to_s
# category3 = doc.xpath('//span[@class="category-str-list"]/a[3]/text()').to_s
# puts category1
# puts category2
# puts category3
# 価格帯
price = doc.xpath('//dd[@class="nowrap price-description"]/text()').to_s
price_head = price.index("￥")

if price.count("以") > 0
  price_tail = price.index("以上")
elsif price.count("-") > 0
  price_tail = price.index("-")
elsif
  price_tail = nil
end

if price_tail != nil
  price = price[price_head+1..price_tail-1].delete(",").to_i
end

puts price

# 評価
star = doc.xpath('//i[@class="star-img stars_4"]').attribute("title").value
star_num = star.index("星")
star = star[0..star_num-2]
puts star
# エリア
area = doc.xpath('//span[@class="neighborhood-str-list"]/text()')
area.index("n")
puts area
# イメージ
image = doc.xpath('//meta[@property="og:image"]').attribute("content").value
image_url = doc.xpath('//a[@class="see-more show-all-overlay"]').attribute("href").value
image_url = "https://www.yelp.co.jp/" + image_url + "?tab=food"

html = open(image_url,opt) do |f|
  charset = f.charset # 文字種別を取得
  f.read # htmlを読み込んで変数htmlに渡す
end
# htmlをパース(解析)してオブジェクトを生成
doc = Nokogiri::HTML.parse(html, nil, charset)
image = doc.xpath('//meta[@property="og:image"]').attribute("content").value

######################################################################
